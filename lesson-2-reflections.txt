What happens when you initialize a repository? Why do you need to do it?

It creates the necessary files and directories to be able to save commits
and actually act like a version control system. I need to do it to be able
to save my commits.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

It is different because it is not permanent. It allows you to see what is going
to happen before it happens so that you verify if this is a logical commit and 
visualize what it will actually look like.

How can you use the staging area to make sure you have one commit per logical
change?

By being able to analyse what I'm about to commit before I do it. If the commit
is to large or to small I can adjust accordingly before I commit. It is a good
way to really visualize what the commit is going to look like.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

If I want to try something that I'm not sure its going to work. I can also use
a branch when I want to create different versions of the program that I want
to work simultaneously. 

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
